// This is your Prisma  file,
// learn more about it in the docs: https://pris.ly/d/prisma-

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum StatusPedido {
  PENDENTE
  EM_ANDAMENTO
  CONCLUIDO
  CANCELADO
}

enum StatusOrcamento {
  PENDENTE
  APROVADO
  REJEITADO
  CANCELADO
  CONVERTIDO
}

model Customer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String    @unique
  password   String
  status     Boolean
  role       Role      @default(USER) // <-- Enum em vez de booleano
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("customers")
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  imagePath String
  createdAt DateTime @default(now())
  items     Item[]

  @@map("category")
}

model Item {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  subname    String
  imagePath  String?
  filePath   String?
  createdAt  DateTime    @default(now())
  categoryId String
  status     String      @default("PENDENTE")
  category   Category    @relation(fields: [categoryId], references: [id])
  itemType   String?
  pedidos    Pedido[] // Relação um-para-muitos
  orcamentos Orcamento[] // Relação um-para-muitos

  @@map("items")
}

model Pedido {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  quantidade  Int
  material    String
  dataEmissao DateTime
  operacao    String
  cliente     String?
  itemId      String   @db.ObjectId // REMOVA @unique daqui
  item        Item     @relation(fields: [itemId], references: [id])
  createdAt   DateTime @default(now())

  status StatusPedido @default(PENDENTE)

  @@map("pedidos")
}

model Orcamento {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  quantidade  Int
  material    String
  dataEmissao DateTime
  operacao    String
  cliente     String?
  itemId      String          @db.ObjectId
  item        Item            @relation(fields: [itemId], references: [id])
  valor       Float
  createdAt   DateTime        @default(now())
  status      StatusOrcamento @default(PENDENTE) // Garantir que use o enum

  @@map("orcamentos") // Mude para plural para consistência
}
